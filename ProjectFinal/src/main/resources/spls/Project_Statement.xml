<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Project">

	<select id="test" resultType="com.min.proj.vo.ProjectVo">
	SELECT *
	FROM PROJECT p
	</select>

	<!-- ProjectDao -->
	<insert id="newProj" parameterType="java.lang.String">
	INSERT INTO PROJECT
	(PROJ_NAME, PROJ_TOKEN)
	VALUES(#{projName}, NULL)
	</insert>

	<select id="chkProj" parameterType="java.lang.String" resultType="java.lang.Integer">
	SELECT COUNT(*) 
	FROM PROJECT gp 
	WHERE PROJ_NAME = #{projName}
	</select>
	
	<select id="chkRandomKey" parameterType="java.lang.String" resultType="java.lang.Integer">
	SELECT COUNT(*)
	FROM PROJECT gp 
	WHERE PROJ_TOKEN =#{randomkey}
	</select>
	
	<update id="saveRandomKey" parameterType="java.util.Map">
	UPDATE PROJECT
	SET PROJ_TOKEN=#{randomkey}
	WHERE PROJ_NAME=#{projName}
	</update>
	
	<select id="chkProjKey" parameterType="java.lang.String" resultType="ProjVo">
	SELECT PROJ_NAME ,PROJ_TOKEN 
        FROM PROJECT gp 
                WHERE PROJ_NAME = (
                                    SELECT PROJ_NAME 
                                           FROM PROJMEMLIST gp2
                                           WHERE MEM_ID = #{memId} AND PROJ_DELFLAG = 'N')
	</select>
	
	<!-- Document -->
	<insert id="newDoc" parameterType="java.lang.String">
	INSERT INTO DOCUMENT 
        (DOC_ID, PROJ_NAME,DOC_DATE)
                VALUES('DOC'||PROJ_SEQ.NEXTVAL, #{projName},SYSDATE)
	</insert>
	
	<!-- ProjMemListDao -->
	<select id="chkProjMem" parameterType="java.lang.String" resultType="ProjMemListVo">
	SELECT MEM_ID, PROJ_NAME, PROJ_PM
	FROM PROJMEMLIST gp 
		WHERE MEM_ID =#{memId} AND PROJ_DELFLAG ='N'
	</select>

	<insert id="joinProj" parameterType="java.util.Map">
	INSERT INTO PROJMEMLIST
        (MEM_ID, PROJ_NAME, PROJ_PM, PROJ_DELFLAG)
                VALUES(#{memId}, (SELECT PROJ_NAME 
                                    FROM PROJECT gp 
                                    WHERE PROJ_TOKEN =#{projToken}), 'N','N')
	</insert>
	
	<insert id="basicMemProj" parameterType="java.util.Map">
	INSERT INTO PROJMEMLIST
	(MEM_ID, PROJ_NAME, PROJ_PM, PROJ_DELFLAG)
	VALUES(#{memId}, #{projName}, 'Y','N')
	</insert>
	
	<update id="exitProj" parameterType="java.lang.String">
	DELETE  PROJMEMLIST 
        WHERE MEM_ID = #{memId} AND PROJ_PM ='N'
	</update>
	
	<select id="projMemList" parameterType="java.lang.String" resultType="ProjMemListVo">
	SELECT MEM_ID ,PROJ_PM ,PROJ_DELFLAG,PROJ_NAME 
        FROM PROJMEMLIST gp 
                WHERE PROJ_NAME =#{projName}
	</select>
	
	<update id="changePm" parameterType="java.util.Map">
	UPDATE PROJMEMLIST 
		SET PROJ_PM = CASE WHEN PROJ_PM = 'Y' THEN 'N' ELSE 'Y' END
		WHERE MEM_ID IN(#{memId1},#{memId2})
	</update>
	
	<!-- TOPCATEGORYDAO -->
	<insert id="newTopCategory" parameterType="java.util.Map">
	INSERT INTO TOPCATEGORY
	(TOP_ID, DOC_ID, TOP_CODE, TOP_NAME, TOP_STEP, TOP_DELFLAG, TOP_DATE)
	VALUES('TOP'||PROJ_SEQ.NEXTVAL , 
	                (SELECT DOC_ID 
	                        FROM DOCUMENT gd
	                                WHERE PROJ_NAME=#{projName}), #{topCode}, #{topName},
	                (SELECT NVL(MAX(TOP_STEP),0)
	                        FROM TOPCATEGORY gm 
	                                WHERE  DOC_ID=(SELECT DOC_ID 
	                                                     FROM DOCUMENT gd
	                                                     WHERE PROJ_NAME=#{projName}))+1, 'N', SYSDATE)
	</insert>
	<update id="fixTopCategory" parameterType="java.util.Map">
	UPDATE TOPCATEGORY 
		SET TOP_CODE=#{topCode}, TOP_NAME=#{topName}
		WHERE TOP_ID=#{topId}
	</update>
	
	<delete id="deleteTopCategory" parameterType="java.lang.String">
	DELETE FROM TOPCATEGORY
	WHERE TOP_ID=#{topId}
	</delete>
	
	<!-- FBS -->
	<resultMap type="com.min.proj.vo.FbsVo" id="joinFbs">
		<result property="fbsName" column="FBS_NAME"/>
		<result property="fbsCode" column="FBS_CODE"/>
		<result property="fbsContent" column="FBS_CONTENT"/>
		<result property="fbsImp" column="FBS_IMP"/>
		<result property="fbsLevel" column="FBS_LEVEL"/>
		<result property="fbsManager" column="FBS_MANAGER"/>
		<result property="fbsStep" column="FBS_STEP"/>
		<result property="midId" column="MID_ID"/>
		
		<result property="topVo.topName" column="TOP_NAME"/>
		<result property="topVo.topCode" column="TOP_CODE"/>
		<result property="topVo.topStep" column="TOP_STEP"/>
	</resultMap>
	
	<select id="selectFbs" parameterType="java.util.Map" resultMap="joinFbs">
	SELECT b.TOP_ID, TOP_NAME,TOP_CODE,TOP_STEP , 
			MID_ID, FBS_NAME, FBS_CODE ,
					FBS_CONTENT ,FBS_IMP ,FBS_LEVEL , 
						FBS_MANAGER, FBS_STEP
        FROM (SELECT TOP_ID,TOP_NAME,TOP_CODE, TOP_STEP 
	             FROM DOCUMENT gd 
	             INNER JOIN TOPCATEGORY gm 
	             USING(DOC_ID)
	             WHERE DOC_ID=(SELECT DOC_ID
	                                 FROM DOCUMENT gd
	                                 WHERE PROJ_NAME=(SELECT PROJ_NAME 
	                                                       FROM PROJMEMLIST gp
	                                                       WHERE MEM_ID=#{memId}))
	                                                       AND TOP_DELFLAG ='N') b LEFT OUTER JOIN FBS f 
	                                                       ON b.TOP_ID = f.TOP_ID 
	                                                       ORDER BY TOP_STEP,FBS_STEP 
	</select>
	
	<insert id="newFbs" parameterType="java.util.Map">
	INSERT INTO FBS
                (MID_ID, TOP_ID, 
	                FBS_NAME, FBS_CODE, FBS_CONTENT, FBS_IMP, 
	                FBS_LEVEL, FBS_MANAGER, FBS_STEP, 
	                FBS_DELFLAG, FBS_DATE)
	VALUES('MID'||PROJ_SEQ.NEXTVAL ,(SELECT TOP_ID 
									FROM TOPCATEGORY t 
									WHERE DOC_ID = (SELECT DOC_ID FROM DOCUMENT d WHERE PROJ_NAME=#{projName})
									AND TOP_NAME =#{topName}),
									#{fbsName},#{fbsCode}, #{fbsContent}, #{fbsImp}, 
	                                #{fbsLevel}, #{fbsManager},(SELECT NVL(MAX(FBS_STEP),0) 
                                                    FROM FBS gf
                                                    WHERE TOP_ID = ((SELECT TOP_ID 
																		FROM TOPCATEGORY t 
																		WHERE DOC_ID = (SELECT DOC_ID FROM DOCUMENT d WHERE PROJ_NAME='창창일학1')
																		AND TOP_NAME =#{topName})))+1,
                                    'N', SYSDATE)
	</insert>
	
	<update id="fixFbs" parameterType="java.util.Map">
	UPDATE FBS b
		SET FBS_NAME=#{fbsName}, FBS_CODE=#{fbsCode}, FBS_CONTENT=#{fbsContent}, 
		FBS_IMP=#{fbsImp}, FBS_LEVEL=#{fbsLevel}, FBS_MANAGER=#{fbsManager}, TOP_ID=#{topId}
		WHERE MID_ID=#{midId}
	</update>
	<!-- WBS -->
	
	<insert id="newWbs" parameterType="java.util.Map">
	INSERT INTO WBS
	(WBS_ID, MID_ID, WBS_CODE,
	        WBS_NAME, WBS_CONENT, WBS_MANAGER,
	                WBS_START_DATE, WBS_END_DATE, WBS_FIN_DATE, 
	                        WBS_STEP, WBS_DELFLAG, WBS_DATE)
	VALUES('WBS'||PROJ_SEQ.NEXTVAL , (SELECT MID_ID 
										FROM FBS f 
										WHERE FBS_NAME = #{midName}), #{wbsCode},
	                        #{wbsName}, #{wbsContent}, #{wbsManager},
	                                #{wbsStartDate}, #{wbsFinDate}, NULL, 
	                                        (SELECT NVL(MAX(WBS_STEP),0) 
	                                            FROM WBS wf
	                                            WHERE MID_ID=((SELECT MID_ID 
																	FROM FBS f 
																	WHERE FBS_NAME = #{midName})))+1, 'N', SYSDATE)
	</insert>
	
	<resultMap type="com.min.proj.vo.WbsVo" id="joinWbs">
		<result property="fbsVo.midId" column="MID_ID"/>
		<result property="fbsVo.fbsName" column="FBS_NAME"/>
		<result property="fbsVo.fbsStep" column="FBS_STEP"/>
		
		
		<result property="topVo.topId" column="TOP_ID"/>
		<result property="topVo.topName" column="TOP_NAME"/>
		<result property="topVo.topCode" column="TOP_CODE"/>
		<result property="topVo.topStep" column="TOP_STEP"/>
	</resultMap>
	<select id="selectWbs" parameterType="java.util.Map" resultMap="joinWbs">
	SELECT b.TOP_ID ,TOP_NAME,TOP_CODE,
		TOP_STEP ,f.MID_ID ,FBS_NAME , 
			FBS_STEP,WBS_ID, WBS_CODE, 
				WBS_NAME ,WBS_CONENT ,
                        WBS_MANAGER, WBS_START_DATE ,WBS_END_DATE,
                               WBS_FIN_DATE ,WBS_STEP 
        FROM (SELECT TOP_ID,TOP_NAME,TOP_CODE, TOP_STEP 
	             FROM DOCUMENT gd 
	             INNER JOIN TOPCATEGORY gm 
	             USING(DOC_ID)
	             WHERE DOC_ID=(SELECT DOC_ID
	                                 FROM DOCUMENT gd
	                                 WHERE PROJ_NAME=(SELECT PROJ_NAME 
	                                                       FROM PROJMEMLIST gp
	                                                       WHERE MEM_ID=#{memId}))
	                                                       AND TOP_DELFLAG ='N') b 
	                                                       LEFT OUTER JOIN FBS f 
	                                                       ON b.TOP_ID = f.TOP_ID
	                                                       LEFT OUTER JOIN WBS w
	                                                       ON f.MID_ID =w.MID_ID 
	                                                       ORDER BY TOP_STEP,FBS_STEP 
	</select>
	
	<update id="fixWbs" parameterType="java.util.Map">
	UPDATE WBS 
		SET WBS_CODE=#{wbsCode}, WBS_NAME=#{wbsName}, WBS_CONENT=#{wbsContent}, WBS_MANAGER=#{wbsManager},
			WBS_START_DATE=#{wbsStartDate}, WBS_END_DATE=#{wbsEndDate}
		WHERE WBS_ID=#{wbsId}
	</update>
	
	<!-- FIXHISTORY -->
	<insert id="newFix" parameterType="java.util.Map">
	INSERT INTO FIXHISTORY 
		(FIX_ID, DOC_ID, FIX_CONTENT, FIX_NAME , FIX_DATE)
		VALUES('FIX'||PROJ_SEQ.NEXTVAL , 
		                (SELECT DOC_ID 
			                 FROM DOCUMENT gd 
		                     WHERE PROJ_NAME  = (SELECT PROJ_NAME 
	                       	                      FROM PROJMEMLIST gp 
	                   		                      WHERE MEM_ID = #{memId})), 
	                   		                      #{fixContent}, #{fixName}, SYSDATE)
	</insert>
	
	<select id="cntFixHistory" parameterType="java.util.Map" resultType="java.lang.Integer">
	SELECT COUNT(*)
	    FROM FIXHISTORY gf 
	    WHERE DOC_ID = (SELECT DOC_ID
	                   		FROM DOCUMENT gd 
	                        WHERE PROJ_NAME  = (SELECT PROJ_NAME 
	                        						FROM PROJMEMLIST gp 
	                                                WHERE MEM_ID = #{memId}))
	</select>
	
	<delete id="deletFixHistory" parameterType="java.util.Map">
	DELETE FROM FIXHISTORY gf2 
		WHERE FIX_ID =(
		SELECT FIX_ID 
		FROM (
				SELECT ROWNUM AS RN, DOC_ID , FIX_ID ,FIX_CONTENT ,FIX_NAME ,FIX_DATE 
			        FROM (
				SELECT DOC_ID , FIX_ID ,FIX_CONTENT ,FIX_NAME  ,FIX_DATE 
		            FROM FIXHISTORY gf 
		            WHERE DOC_ID = (SELECT DOC_ID
		                  			FROM DOCUMENT gd 
		                            WHERE PROJ_NAME  = (SELECT PROJ_NAME 
		                                                 FROM PROJMEMLIST gp 
		                                                   WHERE MEM_ID = #{memId}))
		                               		               ORDER BY FIX_DATE 
		                                )
		        )
		WHERE RN =1
		)
	</delete>
	
	<update id="modifyFixHistory" parameterType="java.util.Map">
	UPDATE FIXHISTORY 
		SET  FIX_CONTENT=#{fixContent}, FIX_NAME=#{fixName}
		WHERE FIX_ID=#{fixId}
	</update>
	
	<select id="selectFixHistory" parameterType="java.util.Map" resultType="FixHistoryVo">
	SELECT FIX_ID ,DOC_ID ,FIX_CONTENT ,FIX_NAME ,FIX_DATE 
	FROM FIXHISTORY gf 
		WHERE DOC_ID = (SELECT DOC_ID 
							FROM DOCUMENT gd 
								WHERE PROJ_NAME =(SELECT PROJ_NAME 
													FROM PROJMEMLIST gp2
														WHERE MEM_ID=#{memId})
						)
	</select>
</mapper>
